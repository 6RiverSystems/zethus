{"version":3,"sources":["utils/index.js","components/styled/index.js","components/styled/constants.js","components/styled/modal.js","components/styled/viz.js","panels/addModal/vizTypeItem.jsx","panels/addModal/vizTypeDetails.jsx","panels/addModal/tabVizType.jsx","panels/addModal/tabTopicName.jsx","panels/addModal/optionsRobotModel.jsx","panels/addModal/optionsGeneric.jsx","panels/addModal/options.jsx","panels/addModal/index.jsx","components/optionRow.jsx","panels/sidebar/globalOptions.jsx","components/connectionDot.jsx","components/logo.jsx","panels/sidebar/vizOptions/colorTransformer.jsx","panels/sidebar/vizOptions/laserScan.jsx","panels/sidebar/vizOptions/map.jsx","panels/sidebar/vizOptions/marker.jsx","panels/sidebar/vizOptions/arrow.jsx","panels/sidebar/vizOptions/flatArrow.jsx","panels/sidebar/vizOptions/axes.jsx","panels/sidebar/vizOptions/shape.jsx","panels/sidebar/vizOptions/odometry.jsx","panels/sidebar/vizOptions/path.jsx","panels/sidebar/vizOptions/pose.jsx","panels/sidebar/vizOptions/vizSpecificOption.jsx","panels/sidebar/vizOptions/index.jsx","panels/sidebar/index.jsx","panels/viewer/index.jsx","panels/info/index.jsx","panels/tools/index.jsx","panels/visualizations/index.jsx","panels/index.jsx","zethus.jsx","index.jsx"],"names":["ROS_SOCKET_STATUSES","INITIAL","CONNECTING","CONNECTED","CONNECTION_ERROR","DOCS_ROOT_URL","TF_MESSAGE_TYPES","MESSAGE_TYPE_TF","MESSAGE_TYPE_TF2","getTfTopics","rosTopics","_","filter","t","includes","messageType","vizOptions","type","VIZ_TYPE_IMAGE","icon","messageTypes","MESSAGE_TYPE_IMAGE","description","docsLink","concat","VIZ_TYPE_LASERSCAN","MESSAGE_TYPE_LASERSCAN","VIZ_TYPE_MAP","MESSAGE_TYPE_OCCUPANCYGRID","VIZ_TYPE_MARKER","MESSAGE_TYPE_MARKER","VIZ_TYPE_MARKERARRAY","MESSAGE_TYPE_MARKERARRAY","VIZ_TYPE_ODOMETRY","MESSAGE_TYPE_ODOMETRY","isDisplay","VIZ_TYPE_PATH","MESSAGE_TYPE_PATH","VIZ_TYPE_POINTCLOUD","MESSAGE_TYPE_POINTCLOUD2","VIZ_TYPE_POSE","MESSAGE_TYPE_POSESTAMPED","VIZ_TYPE_POSEARRAY","MESSAGE_TYPE_POSEARRAY","VIZ_TYPE_ROBOTMODEL","MESSAGE_TYPE_ROBOT_MODEL","VIZ_TYPE_TF","DEFAULT_CONFIG","panels","sidebar","display","tools","info","ros","endpoint","visualizations","globalOptions","backgroundColor","value","DEFAULT_OPTIONS_SCENE","fixedFrame","grid","size","gridSize","divisions","gridDivisions","color","gridColor","centerlineColor","gridCenterlineColor","mode","controls","enabled","measure","custom","name","topic","updateOptionsUtil","e","_this$props","this","props","key","options","updateVizOptions","_e$target","target","checked","optionId","dataset","id","Object","defineProperty","has","Button","styled","button","_templateObject","Paragraph","p","_templateObject2","Anchor","a","_templateObject3","Separator","hr","_templateObject4","Flex","div","_templateObject5","FlexSpace","_templateObject6","FlexGrow","_templateObject7","PanelWrapper","_templateObject8","PanelContent","_templateObject9","Container","_templateObject10","TabsHeader","_templateObject11","TabsButton","_templateObject12","_ref","selected","css","_templateObject13","ButtonPrimary","_templateObject14","InputWrapper","_templateObject15","InputLabel","label","_templateObject16","inputStyles","_ref2","error","_templateObject17","Input","input","_templateObject18","Select","select","_templateObject19","HalfWidth","_templateObject20","StyledOptionRow","_templateObject21","OptionContainer","_templateObject22","twinkle","keyframes","_templateObject23","RosStatusIndicator","span","_templateObject24","_ref3","status","_templateObject25","_templateObject26","_templateObject27","_templateObject28","StyledSidebar","_templateObject29","StyledLogo","_templateObject30","ModalWrapper","modal_templateObject","ModalContents","modal_templateObject2","ModalTitle","h2","modal_templateObject3","ModalActions","modal_templateObject4","TypeEmpty","modal_templateObject5","TypeUnsupported","modal_templateObject6","TypeContainer","modal_templateObject7","TypeSelection","modal_templateObject8","TypeInfo","modal_templateObject9","TypeHeading","h4","modal_templateObject10","AddVizForm","form","modal_templateObject11","TopicRow","modal_templateObject12","TypeRow","modal_templateObject13","viz_templateObject","SidebarVizContainer","viz_templateObject2","VizItemContent","viz_templateObject3","VizItemIcon","img","viz_templateObject4","VizImageContainer","viz_templateObject5","RosStatus","viz_templateObject6","VizImageHeader","viz_templateObject7","VizItem","viz_templateObject8","viz_templateObject9","VizItemActions","viz_templateObject10","VizItemCollapse","viz_templateObject11","collapsed","viz_templateObject12","customStyles","container","provided","objectSpread","fontSize","width","control","border","VizTypeItem","rosParams","selectedViz","selectViz","topics","vizDetails","topicName","get","isRobotmodel","react_default","createElement","src","alt","react_select_browser_esm","isSearchable","className","styles","map","onChange","onClick","React","PureComponent","VizTypeDetails","vizType","_$find","find","v","Fragment","react_markdown_default","source","href","VizType","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","onSubmit","setState","preventDefault","_this$state$selectedV","_this2","closeModal","op","vizTypeItem","vizTypeDetails","disabled","TopicName","sortBy","vizOption","Component","statuses","loading","loaded","RobotModelOptions","packages","getPackages","updateName","updatePackage","Amphion","RobotModel","mapValues","keyBy","packageId","_this$props2","addVisualization","_this$state","_this3","_this$state2","back","path","packageName","data-id","required","GenericOptions","visible","SelectedVizOptionsForm","optionsRobotModel","optionsGeneric","stopPropagation","tabs","AddModal","tabType","updateTab","addModal_options","tabText","tabVizType","tabTopicName","OptionRow","children","GlobalOptions","updateOptions","updateGlobalOptions","framesList","_this$props$globalOpt","_this$props$globalOpt2","displayBackgroundColor","valueBackgroundColor","displayOptions","_this$props$globalOpt3","displayFixedFrame","valueFixedFrame","_this$props$globalOpt4","displayGrid","valueGrid","optionRow","f","ConnectionDot","Logo","viewBox","style","fill","points","d","Intensity","_props$options","autocomputeIntensityBounds","channelName","maxColor","maxIntensity","minColor","minIntensity","useRainbow","INTENSITY_CHANNEL_OPTIONS","channel","AxisColor","_props$options2","autocomputeValueBounds","axis","maxAxisValue","minAxisValue","AXES","ColorTransformer","_this$props$options","colorTransformer","flatColor","COLOR_TRANSFORMERS","INTENSITY","colorTransformer_Intensity","AXIS_COLOR","colorTransformer_AxisColor","FLAT_COLOR","LaserScanOptions","propsOptions","DEFAULT_OPTIONS_LASERSCAN","alpha","LASERSCAN_STYLES","lStyle","vizOptions_colorTransformer","MapOptions","DEFAULT_OPTIONS_MAP","colorScheme","drawBehind","MAP_COLOR_SCHEMES","scheme","MarkerOptions","updateNamespaceVisibility","namespaces","DEFAULT_OPTIONS_MARKER","compact","keys","ArrowOptions","_DEFAULT_OPTIONS_ARRO","DEFAULT_OPTIONS_ARROW","headLength","headRadius","shaftLength","shaftRadius","FlatArrowOptions","_DEFAULT_OPTIONS_FLAT","DEFAULT_OPTIONS_FLATARROW","arrowLength","AxesOptions","_DEFAULT_OPTIONS_AXES","DEFAULT_OPTIONS_AXES","axesLength","axesRadius","ShapeOptions","shapeType","OBJECT_TYPE_ARROW","arrow","OBJECT_TYPE_FLAT_ARROW","flatArrow","OBJECT_TYPE_AXES","axes","OdometryOptions","DEFAULT_OPTIONS_ODOMETRY","angleTolerance","keep","positionTolerance","shape","PathOptions","_DEFAULT_OPTIONS_PATH","DEFAULT_OPTIONS_PATH","dropdownOptions","_dropdownOptions","PoseOptions","DEFAULT_OPTIONS_POSE","o","VizSpecificOptions","laserScan","marker","odometry","vizOptions_path","VIZ_TYPE_POLYGON","pose","VizOptions","_ref$options","vizObject","removeVisualization","toggleVisibility","_useState","useState","_useState2","slicedToArray","toggleCollapsed","isBoolean","vizSpecificOption","Sidebar","rosInput","rosEndpoint","updateRosInput","updateRosEndpoint","rosInstance","rosStatus","viewer","toggleAddModal","logo","connectionDot","sidebar_globalOptions","vizItem","sidebar_vizOptions","StyledViewport","viewer_templateObject","Viewport","createRef","updateViewerOptions","prevProps","selectedFrame","current","setContainer","scene","stats","dom","appendChild","destroy","ref","Info","Tools","Visualization","vizInstance","imageDomRef","resetVisualization","currentTfTopics","prevTfTopics","join","changeTopic","updateVisibility","_this$props2$options","getNewViz","addRobot","object","subscribe","show","hide","_this$props$options2","lib","visibility","default","x","window","innerWidth","y","height","bounds","onResizeStop","direction","updateDimensions","Number","parseInt","Image","LaserScan","Map","Marker","MarkerArray","Odometry","Path","PointCloud","Pose","PoseArray","Tf","Wrapper","addModalOpen","connectRos","disconnectRos","refreshRosData","updateFramesList","ROSLIB","Ros","TfViewer","onFramesListUpdate","prevState","on","toConsumableArray","getTopics","index","types","getParams","trimStart","connect","isConnected","close","_this4","_this$props$configura","configuration","_this$props$configura2","displayInfo","displaySidebar","displayTools","addModal","update","panels_viewer","panels_visualizations","defaultProps","withGracefulUnmount","Zethus","store","set","option","clonedGlobalOptions","cloneDeep","vizId","shortid","generate","ReactDOM","render","zethus","document","getElementById"],"mappings":"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","file":"static/js/main.9b0e751b.chunk.js","sourcesContent":["import {\n  MESSAGE_TYPE_TF,\n  MESSAGE_TYPE_POSESTAMPED,\n  MESSAGE_TYPE_POINTCLOUD2,\n  MESSAGE_TYPE_MARKERARRAY,\n  MESSAGE_TYPE_LASERSCAN,\n  MESSAGE_TYPE_OCCUPANCYGRID,\n  MESSAGE_TYPE_ODOMETRY,\n  MESSAGE_TYPE_ROBOT_MODEL,\n  MESSAGE_TYPE_POSEARRAY,\n  MESSAGE_TYPE_PATH,\n  MESSAGE_TYPE_IMAGE,\n  MESSAGE_TYPE_MARKER,\n  MESSAGE_TYPE_TF2,\n  VIZ_TYPE_IMAGE,\n  VIZ_TYPE_LASERSCAN,\n  VIZ_TYPE_MAP,\n  VIZ_TYPE_MARKER,\n  VIZ_TYPE_MARKERARRAY,\n  VIZ_TYPE_ODOMETRY,\n  VIZ_TYPE_PATH,\n  VIZ_TYPE_POINTCLOUD,\n  VIZ_TYPE_POSE,\n  VIZ_TYPE_POSEARRAY,\n  VIZ_TYPE_ROBOTMODEL,\n  VIZ_TYPE_TF,\n  DEFAULT_OPTIONS_SCENE,\n} from 'amphion/src/utils/constants';\nimport _ from 'lodash';\n\nexport const ROS_SOCKET_STATUSES = {\n  INITIAL: 'Idle. Not Connected',\n  CONNECTING: 'Connecting',\n  CONNECTED: 'Connected successfully',\n  CONNECTION_ERROR: 'Error in connection',\n};\n\nconst DOCS_ROOT_URL = 'https://github.com/rapyuta-robotics/zethus/wiki/';\n\nexport const TF_MESSAGE_TYPES = [MESSAGE_TYPE_TF, MESSAGE_TYPE_TF2];\n\nexport const getTfTopics = rosTopics =>\n  _.filter(rosTopics, t => _.includes(TF_MESSAGE_TYPES, t.messageType));\n\nexport const vizOptions = [\n  {\n    type: VIZ_TYPE_IMAGE,\n    icon: '/image/icons/icon_image.svg',\n    messageTypes: [MESSAGE_TYPE_IMAGE],\n    description: `Creates a container to visualize the image data represented by a sensor_msgs/Image topic.\n    ![](/image/viz/viz-image.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Image`,\n  },\n  {\n    type: VIZ_TYPE_LASERSCAN,\n    icon: '/image/icons/icon_laser_scan.svg',\n    messageTypes: [MESSAGE_TYPE_LASERSCAN],\n    description: `Adds a visualization represented by a sensor_msgs/LaserScan topic to the scene.\n    ![](/image/viz/viz-laserscan.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Laser-Scan`,\n  },\n  {\n    type: VIZ_TYPE_MAP,\n    icon: '/image/icons/icon_map.svg',\n    messageTypes: [MESSAGE_TYPE_OCCUPANCYGRID],\n    description: `Adds a visualization represented by a nav_msgs/OccupancyGrid topic to the scene.\n    ![](/image/viz/viz-map.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Map`,\n  },\n  {\n    type: VIZ_TYPE_MARKER,\n    icon: '/image/icons/icon_marker.svg',\n    messageTypes: [MESSAGE_TYPE_MARKER],\n    description: `Adds a visualization represented by a visualization_msgs/Marker or visualization_msgs/MarkerArray topic to the scene.\n    ![](/image/viz/viz-marker.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Marker`,\n  },\n  {\n    type: VIZ_TYPE_MARKERARRAY,\n    icon: '/image/icons/icon_marker_array.svg',\n    messageTypes: [MESSAGE_TYPE_MARKERARRAY],\n    description: `Adds a visualization represented by a visualization_msgs/Marker or visualization_msgs/MarkerArray topic to the scene.\n    ![](/image/viz/viz-markerarray.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Marker-Array`,\n  },\n  {\n    type: VIZ_TYPE_ODOMETRY,\n    icon: '/image/icons/icon_odometry.svg',\n    messageTypes: [MESSAGE_TYPE_ODOMETRY],\n    description: `Adds a visualization represented by a nav_msgs/Odometry topic to the scene.\n    ![](/image/viz/viz-odometry.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Odometry`,\n    isDisplay: false,\n  },\n  {\n    type: VIZ_TYPE_PATH,\n    icon: '/image/icons/icon_path.svg',\n    messageTypes: [MESSAGE_TYPE_PATH],\n    description: `Adds a visualization represented by a nav_msgs/Path topic to the scene.\n    ![](/image/viz/viz-path.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Path`,\n  },\n  {\n    type: VIZ_TYPE_POINTCLOUD,\n    icon: '/image/icons/icon_pointcloud_2.svg',\n    messageTypes: [MESSAGE_TYPE_POINTCLOUD2],\n    description: `Adds a visualization represented by a sensor_msgs/PointCloud2 topic to the scene.\n    ![](/image/viz/viz-pointcloud.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Point-Cloud-2`,\n  },\n  {\n    type: VIZ_TYPE_POSE,\n    icon: '/image/icons/icon_pose.svg',\n    messageTypes: [MESSAGE_TYPE_POSESTAMPED],\n    description: `Adds a visualization represented by a geometry_msgs/PoseStamped topic to the scene.\n    ![](/image/viz/viz-pose.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Pose`,\n  },\n  {\n    type: VIZ_TYPE_POSEARRAY,\n    icon: '/image/icons/icon_pose_array.svg',\n    messageTypes: [MESSAGE_TYPE_POSEARRAY],\n    description: `Adds a visualization represented by a geometry_msgs/PoseArray topic to the scene. An array of pose is added to the scene based on the Shape type selected.\n    ![](/image/viz/viz-posearray.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Pose-Array`,\n  },\n  {\n    type: VIZ_TYPE_ROBOTMODEL,\n    icon: '/image/icons/icon_robot_model.svg',\n    messageTypes: [MESSAGE_TYPE_ROBOT_MODEL],\n    description: `Adds a robot model to the scene from a ros parameter.\n    ![](/image/viz/viz-robotmodel.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Robot-Model`,\n  },\n  {\n    type: VIZ_TYPE_TF,\n    icon: '/image/icons/icon_tf.svg',\n    messageTypes: TF_MESSAGE_TYPES,\n    description: `Adds a visualization represented by a tf/tfMessage and tf2_msgs/TFMessage topic to the scene.\n    ![](/image/viz/viz-tf.png \"\")`,\n    docsLink: `${DOCS_ROOT_URL}Tf`,\n  },\n];\n\nexport const DEFAULT_CONFIG = {\n  panels: {\n    sidebar: {\n      display: true,\n    },\n    tools: {\n      display: false,\n    },\n    info: {\n      display: false,\n    },\n  },\n  ros: {\n    endpoint: 'ws://localhost:9090',\n  },\n  visualizations: [],\n  globalOptions: {\n    display: true,\n    backgroundColor: {\n      display: true,\n      value: DEFAULT_OPTIONS_SCENE.backgroundColor,\n    },\n    fixedFrame: {\n      display: true,\n      value: 'world',\n    },\n    grid: {\n      display: true,\n      size: DEFAULT_OPTIONS_SCENE.gridSize,\n      divisions: DEFAULT_OPTIONS_SCENE.gridDivisions,\n      color: DEFAULT_OPTIONS_SCENE.gridColor,\n      centerlineColor: DEFAULT_OPTIONS_SCENE.gridCenterlineColor,\n    },\n  },\n  tools: {\n    mode: 'controls',\n    controls: {\n      display: false,\n      enabled: true,\n    },\n    measure: {\n      display: false,\n    },\n    custom: [\n      {\n        name: 'Nav goal',\n        type: 'publishPose',\n        topic: '/navgoal',\n      },\n      {\n        name: 'Nav goal',\n        type: 'publishPoseWithCovariance',\n        topic: 'initialpose',\n      },\n    ],\n  },\n};\n\nexport function updateOptionsUtil(e) {\n  const {\n    options: { key },\n    updateVizOptions,\n  } = this.props;\n  const {\n    checked,\n    dataset: { id: optionId },\n    value,\n  } = e.target;\n  updateVizOptions(key, {\n    [optionId]: _.has(e.target, 'checked') ? checked : value,\n  });\n}\n","import styled, { css, keyframes } from 'styled-components';\nimport {\n  COLOR_BLUE,\n  COLOR_GREY_LIGHT_1,\n  COLOR_GREY_LIGHT_2,\n  COLOR_GREY_TEXT_2,\n  COLOR_GREY_TEXT_3,\n  COLOR_PRIMARY,\n  COLOR_RED,\n  FONT_SIZE_S,\n} from './constants';\nimport { ROS_SOCKET_STATUSES } from '../../utils';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: inherit;\n  font-family: inherit;\n  outline: 0;\n\n  &:active {\n    outline: 0;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  line-height: 1.5;\n`;\n\nexport const Anchor = styled.a`\n  color: ${COLOR_PRIMARY};\n`;\n\nexport const Separator = styled.hr`\n  width: 100%;\n  height: 0;\n  border: 0;\n  margin: 0;\n  border-bottom: 1px solid ${COLOR_GREY_LIGHT_2};\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n`;\n\nexport const FlexSpace = styled.div`\n  width: 10px;\n`;\n\nexport const FlexGrow = styled.div`\n  flex-grow: 1;\n`;\n\nexport const PanelWrapper = styled.div`\n  display: flex;\n  background-color: #000;\n  height: 100vh;\n  overflow-y: hidden;\n  width: 100%;\n`;\n\nexport const PanelContent = styled.div`\n  width: 0;\n  flex-grow: 1;\n  flex-shrink: 1;\n`;\n\nexport const Container = styled.div`\n  padding: 15px 20px;\n`;\n\nexport const TabsHeader = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${COLOR_GREY_LIGHT_2};\n  flex-shrink: 0;\n`;\n\nexport const TabsButton = styled(Button)`\n  margin: 0 10px -1px;\n  background-color: transparent;\n  border: 1px solid ${COLOR_GREY_LIGHT_2};\n  border-bottom: 1px solid ${COLOR_GREY_LIGHT_2};\n  border-radius: 4px 4px 0 0;\n  color: inherit;\n  padding: 5px 10px 10px;\n  ${({ selected }) =>\n    selected &&\n    css`\n      border: 1px solid ${COLOR_GREY_LIGHT_2};\n      border-bottom: 1px solid #fff;\n    `}\n`;\n\nexport const ButtonPrimary = styled(Button)`\n  border: 0;\n  margin: 0;\n  padding: 6px 20px;\n  border-radius: 4px;\n  color: white;\n  background-color: ${COLOR_PRIMARY};\n  font-size: 16px;\n  &[disabled] {\n    background-color: ${COLOR_GREY_LIGHT_2};\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  padding-top: 11px;\n  padding-bottom: 11px;\n`;\n\nexport const InputLabel = styled.label`\n  font-size: 14px;\n  color: ${COLOR_GREY_TEXT_3};\n  display: block;\n  margin: 0 0 5px;\n`;\n\nconst inputStyles = `\n  height: 32px;\n  width: 100%;\n  flex-grow: 1;\n  flex-shrink: 1;\n  background-color: ${COLOR_GREY_LIGHT_1};\n  border: 1px solid ${COLOR_GREY_LIGHT_1};\n  color: ${COLOR_GREY_TEXT_2};\n  border-radius: 4px;\n  padding: 0 8px;\n  font-size: inherit;\n  font-family: inherit;\n  outline: 0;\n\n  &:active {\n    outline: 0;\n  }\n  :active,\n  :focus {\n    outline: 0;\n    border: 1px solid ${COLOR_BLUE};\n  }\n  ${({ error }) =>\n    error &&\n    css`\n      border: 1px solid ${COLOR_RED};\n    `}\n  [disabled] {\n    cursor: not-allowed;\n  }\n`;\nexport const Input = styled.input`\n  ${inputStyles}\n`;\n\nexport const Select = styled.select`\n  ${inputStyles}\n`;\n\nexport const HalfWidth = styled.div`\n  width: 50%;\n`;\n\nexport const StyledOptionRow = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n  padding: 3px 0;\n  font-size: ${FONT_SIZE_S};\n\n  ${Input}, ${Select} {\n    height: 26px;\n  }\n`;\n\nexport const OptionContainer = styled.div`\n  padding: 0 20px;\n`;\n\nconst twinkle = keyframes`\n  from, to {\n    opacity: 0;\n  }\n\n  50% {\n    opacity: 1;\n  }\n`;\n\nexport const RosStatusIndicator = styled.span`\n  width: 8px;\n  height: 8px;\n  border-radius: 4px;\n  margin: 0 10px -2px 0;\n  ${({ status }) => {\n    switch (status) {\n      case ROS_SOCKET_STATUSES.CONNECTED:\n        return css`\n          background-color: #3e991c;\n        `;\n      case ROS_SOCKET_STATUSES.CONNECTING:\n        return css`\n          background-color: #f9c351;\n          animation: ${twinkle} normal 1s infinite ease-in-out;\n        `;\n      case ROS_SOCKET_STATUSES.CONNECTION_ERROR:\n        return css`\n          background-color: #ff3e3c;\n        `;\n      default:\n        return css`\n          background-color: #000000;\n        `;\n    }\n  }}\n`;\n\nexport const StyledSidebar = styled.div`\n  background-color: #fff;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n`;\n\nexport const StyledLogo = styled(Container)`\n  svg {\n    height: 40px;\n    display: block;\n  }\n`;\n","export const COLOR_PRIMARY = '#dc1d30';\n\nexport const COLOR_BLUE = '#013c89';\nexport const COLOR_RED = '#dc1d30';\n\nexport const COLOR_GREY_LIGHT_1 = '#f6f6f6';\nexport const COLOR_GREY_LIGHT_2 = '#dddddd';\n\nexport const COLOR_GREY_TEXT_1 = '#222222';\nexport const COLOR_GREY_TEXT_2 = '#444444';\nexport const COLOR_GREY_TEXT_3 = '#666666';\nexport const COLOR_GREY_TEXT_4 = '#888888';\n\nexport const FONT_SIZE_DEFAULT = '0.8rem';\nexport const FONT_SIZE_S = '0.7rem';\n","import styled from 'styled-components';\nimport { Button, Flex, Paragraph } from './index';\nimport {\n  COLOR_GREY_LIGHT_1,\n  COLOR_GREY_LIGHT_2,\n  COLOR_GREY_TEXT_2,\n  COLOR_PRIMARY,\n} from './constants';\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.9);\n`;\n\nexport const ModalContents = styled.div`\n  width: 1000px;\n  margin: 100px auto;\n  height: 600px;\n  background-color: #ffffff;\n  box-shadow: 0 0 40px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin-bottom: 6px;\n  margin-top: 0;\n`;\n\nexport const ModalActions = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  padding: 10px 0 0;\n\n  button {\n    margin-left: 10px;\n  }\n`;\n\nexport const TypeEmpty = styled(Paragraph)`\n  padding-left: 30px;\n  font-style: italic;\n`;\n\nexport const TypeUnsupported = styled(Flex)`\n  padding: 10px;\n  opacity: 0.4;\n  cursor: not-allowed;\n`;\n\nexport const TypeContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  overflow: hidden;\n`;\n\nexport const TypeSelection = styled.div`\n  flex: 1 0 50%;\n  overflow-y: auto;\n`;\n\nexport const TypeInfo = styled.div`\n  border-left: 1px solid ${COLOR_GREY_LIGHT_2};\n  padding: 0 0 0 20px;\n  flex: 1 0 50%;\n  overflow-y: auto;\n\n  h4 {\n    margin-top: 10px;\n    margin-bottom: 8px;\n    font-size: 22px;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  & > div {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const TypeHeading = styled.h4`\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  margin-bottom: 5px;\n`;\n\nexport const AddVizForm = styled.form`\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 1;\n  height: 0;\n  flex-direction: column;\n`;\n\nexport const TopicRow = styled(Button)`\n  text-align: left;\n  width: 100%;\n  font-size: 16px;\n  border: 0;\n  background: transparent;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n\n  .reactSelect {\n    color: ${COLOR_GREY_TEXT_2};\n  }\n\n  &:hover {\n    color: ${COLOR_PRIMARY};\n    background-color: ${COLOR_GREY_LIGHT_1};\n    .reactSelect {\n      color: ${COLOR_GREY_TEXT_2};\n    }\n  }\n\n  ${({ selected }) =>\n    selected &&\n    `\n    color: ${COLOR_PRIMARY};\n    background-color: ${COLOR_GREY_LIGHT_1};\n  `}\n`;\n\nexport const TypeRow = styled(TopicRow)`\n  padding-left: 30px;\n`;\n","import styled, { css } from 'styled-components';\nimport { Button, Container, Flex } from './index';\nimport {\n  COLOR_GREY_LIGHT_1,\n  COLOR_GREY_LIGHT_2,\n  COLOR_GREY_TEXT_4,\n  COLOR_PRIMARY,\n} from './constants';\n\nexport const VizImageClose = styled(Button)`\n  cursor: pointer;\n  background-color: transparent;\n  border: 0;\n  color: inherit;\n  text-decoration: underline;\n  font-size: inherit;\n  font-family: inherit;\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nexport const SidebarVizContainer = styled(Container)`\n  overflow-y: auto;\n`;\n\nexport const VizItemContent = styled.div`\n  margin-top: 8px;\n  margin-left: 24px;\n`;\n\nexport const VizItemIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  background-color: ${COLOR_GREY_LIGHT_1};\n  margin-right: 10px;\n  border-radius: 4px;\n`;\n\nexport const VizImageContainer = styled.div`\n  display: flex;\n  background-color: #fff;\n  flex-direction: column;\n  cursor: move;\n  border-radius: 4px;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  border: 1px solid ${COLOR_GREY_LIGHT_2};\n\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const RosStatus = styled(Flex)`\n  margin-bottom: 10px;\n  align-items: center;\n`;\n\nexport const VizImageHeader = styled.div`\n  display: flex;\n  font-size: 14px;\n  padding: 2px 5px;\n  min-height: 25px;\n  border-bottom: 1px solid ${COLOR_GREY_LIGHT_2};\n  word-break: break-all;\n  overflow: hidden;\n`;\n\nexport const VizImageName = styled.div`\n  pointer-events: none;\n  user-select: none;\n`;\n\nexport const VizItem = styled.div`\n  padding: 10px 0;\n  border-bottom: 1px solid ${COLOR_GREY_LIGHT_1};\n`;\n\nexport const VizItemActions = styled.div`\n  display: flex;\n  margin-top: 8px;\n\n  button {\n    background: ${COLOR_GREY_LIGHT_1};\n    border: 0;\n    border-radius: 4px;\n    color: ${COLOR_GREY_TEXT_4};\n    padding: 5px 10px;\n    font-size: 0.6rem;\n    &:hover {\n      background-color: ${COLOR_PRIMARY};\n      color: #ffffff;\n    }\n    & + button {\n      margin-left: 10px;\n    }\n  }\n`;\n\nexport const VizItemCollapse = styled(Button)`\n  background-color: transparent;\n  border: 0;\n  padding: 0;\n  margin: 0 3px 0 0;\n  width: 20px;\n  height: 20px;\n  img {\n    width: 14px;\n  }\n  ${({ collapsed }) =>\n    collapsed &&\n    css`\n      transform: rotate(-90deg);\n    `}\n`;\n","import React from 'react';\nimport _ from 'lodash';\nimport { VIZ_TYPE_ROBOTMODEL } from 'amphion/src/utils/constants';\nimport Select from 'react-select';\nimport { TypeEmpty, TypeHeading, TypeRow } from '../../components/styled/modal';\nimport { VizItemIcon } from '../../components/styled/viz';\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    fontSize: '16px',\n    width: '250px',\n  }),\n  control: provided => ({\n    ...provided,\n    border: '1px solid #dddddd',\n  }),\n};\n\nclass VizTypeItem extends React.PureComponent {\n  render() {\n    const {\n      rosParams,\n      selectedViz,\n      selectViz,\n      topics,\n      vizDetails,\n    } = this.props;\n    const topicName = _.get(selectedViz, 'topicName');\n    const isRobotmodel = _.get(selectedViz, 'vizType') === VIZ_TYPE_ROBOTMODEL;\n    if (vizDetails.type === VIZ_TYPE_ROBOTMODEL) {\n      return (\n        <div>\n          <TypeHeading>\n            <VizItemIcon src={vizDetails.icon} alt=\"\" />\n            {vizDetails.type}\n          </TypeHeading>\n          <TypeRow type=\"button\" selected={isRobotmodel}>\n            <Select\n              isSearchable\n              className=\"reactSelect\"\n              styles={customStyles}\n              value={\n                topicName && isRobotmodel\n                  ? { label: topicName, value: topicName }\n                  : ''\n              }\n              options={_.map(rosParams, p => ({ label: p, value: p }))}\n              onChange={({ value }) => {\n                selectViz(vizDetails.type, value, '');\n              }}\n            />\n          </TypeRow>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <TypeHeading>\n          <VizItemIcon src={vizDetails.icon} alt=\"\" />\n          {vizDetails.type}\n        </TypeHeading>\n        {_.map(topics, topic => (\n          <TypeRow\n            type=\"button\"\n            key={topic.name}\n            selected={_.get(selectedViz, 'topicName') === topic.name}\n            onClick={() =>\n              selectViz(vizDetails.type, topic.name, topic.messageType)\n            }\n          >\n            {topic.name}\n          </TypeRow>\n        ))}\n        {_.size(topics) === 0 && (\n          <TypeEmpty>No topics available for the visualization type</TypeEmpty>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default VizTypeItem;\n","import React from 'react';\nimport _ from 'lodash';\nimport ReactMarkdown from 'react-markdown';\n\nimport { vizOptions } from '../../utils';\nimport { Anchor } from '../../components/styled';\n\nclass VizTypeDetails extends React.PureComponent {\n  render() {\n    const { vizType } = this.props;\n    const { description, docsLink, type } = _.find(\n      vizOptions,\n      v => v.type === vizType,\n    );\n    return (\n      <React.Fragment>\n        <h4>{type}</h4>\n        <ReactMarkdown source={description} />\n        <Anchor href={docsLink}>View docs</Anchor>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VizTypeDetails;\n","import React from 'react';\nimport _ from 'lodash';\nimport { vizOptions } from '../../utils';\nimport VizTypeItem from './vizTypeItem';\nimport VizTypeDetails from './vizTypeDetails';\nimport { ButtonPrimary, FlexGrow } from '../../components/styled';\nimport {\n  AddVizForm,\n  ModalActions,\n  TypeContainer,\n  TypeInfo,\n  TypeSelection,\n} from '../../components/styled/modal';\n\nclass VizType extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedViz: '',\n    };\n    this.selectViz = this.selectViz.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  selectViz(vizType, topicName, messageType) {\n    this.setState({\n      selectedViz: {\n        vizType,\n        topicName,\n        messageType,\n      },\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { selectViz } = this.props;\n    const {\n      selectedViz: { messageType, topicName, vizType },\n    } = this.state;\n    selectViz(vizType, topicName, messageType);\n  }\n\n  render() {\n    const { selectedViz } = this.state;\n    const { closeModal, rosParams, rosTopics } = this.props;\n    return (\n      <AddVizForm onSubmit={this.onSubmit}>\n        <TypeContainer>\n          <TypeSelection>\n            {_.map(vizOptions, op => {\n              return (\n                <VizTypeItem\n                  selectViz={this.selectViz}\n                  selectedViz={selectedViz}\n                  rosParams={rosParams}\n                  key={op.type}\n                  vizDetails={op}\n                  topics={_.filter(rosTopics, t =>\n                    _.includes(op.messageTypes, t.messageType),\n                  )}\n                />\n              );\n            })}\n          </TypeSelection>\n          <TypeInfo>\n            {selectedViz ? (\n              <VizTypeDetails vizType={selectedViz.vizType} />\n            ) : (\n              <p>\n                No visualization selected.\n                <br />\n                Please choose a visualization on the left to see details\n              </p>\n            )}\n          </TypeInfo>\n        </TypeContainer>\n        <ModalActions>\n          <FlexGrow />\n          <ButtonPrimary type=\"submit\" disabled={!selectedViz}>\n            Proceed\n          </ButtonPrimary>\n          <ButtonPrimary type=\"button\" onClick={closeModal}>\n            Close\n          </ButtonPrimary>\n        </ModalActions>\n      </AddVizForm>\n    );\n  }\n}\n\nexport default VizType;\n","import React from 'react';\nimport _ from 'lodash';\nimport { vizOptions } from '../../utils';\nimport { ButtonPrimary, FlexGrow } from '../../components/styled';\nimport {\n  AddVizForm,\n  ModalActions,\n  TopicRow,\n  TypeContainer,\n  TypeSelection,\n  TypeUnsupported,\n} from '../../components/styled/modal';\n\nclass TopicName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedViz: '',\n    };\n    this.selectViz = this.selectViz.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  selectViz(vizType, topicName, messageType) {\n    this.setState({\n      selectedViz: {\n        vizType,\n        topicName,\n        messageType,\n      },\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { selectViz } = this.props;\n    const {\n      selectedViz: { messageType, topicName, vizType },\n    } = this.state;\n    selectViz(vizType, topicName, messageType);\n  }\n\n  render() {\n    const { closeModal, rosTopics } = this.props;\n    const { selectedViz } = this.state;\n    return (\n      <AddVizForm onSubmit={this.onSubmit}>\n        <TypeContainer>\n          <TypeSelection>\n            {_.map(_.sortBy(rosTopics, 'name'), ({ name, messageType }) => {\n              const vizOption = _.find(vizOptions, v =>\n                _.includes(v.messageTypes, messageType),\n              );\n              return vizOption ? (\n                <TopicRow\n                  type=\"button\"\n                  selected={_.get(selectedViz, 'topicName') === name}\n                  key={name}\n                  onClick={() =>\n                    this.selectViz(vizOption.type, name, messageType)\n                  }\n                >\n                  {name}\n                  <FlexGrow />({messageType})\n                </TopicRow>\n              ) : (\n                <TypeUnsupported key={name}>\n                  {name}\n                  <FlexGrow />\n                  (Unsupported type: {messageType})\n                </TypeUnsupported>\n              );\n            })}\n          </TypeSelection>\n        </TypeContainer>\n        <ModalActions>\n          <FlexGrow />\n          <ButtonPrimary type=\"submit\" disabled={!selectedViz}>\n            Proceed\n          </ButtonPrimary>\n          <ButtonPrimary type=\"button\" onClick={closeModal}>\n            Close\n          </ButtonPrimary>\n        </ModalActions>\n      </AddVizForm>\n    );\n  }\n}\n\nexport default TopicName;\n","import React from 'react';\nimport Amphion from 'amphion';\nimport _ from 'lodash';\nimport {\n  Button,\n  ButtonPrimary,\n  FlexGrow,\n  Input,\n  InputLabel,\n  InputWrapper,\n  Paragraph,\n} from '../../components/styled';\nimport { ModalActions, TypeHeading } from '../../components/styled/modal';\n\nconst statuses = {\n  loading: 0,\n  loaded: 1,\n  error: 2,\n};\n\nclass RobotModelOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.selectedViz.vizType,\n      packages: {},\n      status: statuses.loading,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getPackages = this.getPackages.bind(this);\n    this.updateName = this.updateName.bind(this);\n    this.updatePackage = this.updatePackage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPackages();\n  }\n\n  updateName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  getPackages() {\n    const {\n      ros,\n      selectedViz: { topicName },\n    } = this.props;\n    try {\n      const robotInstance = new Amphion.RobotModel(ros, topicName);\n      robotInstance.getPackages(packages => {\n        this.setState({\n          packages: _.mapValues(_.keyBy(packages), p => `/${p}`),\n          status: statuses.loaded,\n        });\n      });\n    } catch (e) {\n      this.setState({\n        status: statuses.error,\n      });\n    }\n  }\n\n  updatePackage(e) {\n    const {\n      dataset: { id: packageId },\n      value,\n    } = e.target;\n    const { packages } = this.state;\n    this.setState({\n      packages: {\n        ...packages,\n        [packageId]: value,\n      },\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { addVisualization, selectedViz } = this.props;\n    const { name, packages } = this.state;\n    addVisualization({\n      ...selectedViz,\n      name,\n      packages,\n    });\n  }\n\n  render() {\n    const { name, packages, status } = this.state;\n    const { back } = this.props;\n    if (status === statuses.loading) {\n      return <Paragraph>Loading list of packages...</Paragraph>;\n    }\n    if (status === statuses.error) {\n      return (\n        <Paragraph>\n          Error occured while fetching packages. Please{' '}\n          <Button onClick={this.getPackages}>try again</Button>\n        </Paragraph>\n      );\n    }\n    return (\n      <form onSubmit={this.onSubmit}>\n        <InputWrapper>\n          <InputLabel>Visualization name</InputLabel>\n          <Input value={name} onChange={this.updateName} />\n        </InputWrapper>\n        <TypeHeading>Packages</TypeHeading>\n        {_.map(packages, (path, packageName) => (\n          <InputWrapper key={packageName}>\n            <InputLabel>{packageName}</InputLabel>\n            <Input\n              data-id={packageName}\n              value={path}\n              onChange={this.updatePackage}\n              required\n            />\n          </InputWrapper>\n        ))}\n        <ModalActions>\n          <FlexGrow />\n          <ButtonPrimary type=\"submit\">Add Robot model</ButtonPrimary>\n          <ButtonPrimary type=\"button\" onClick={back}>\n            Back\n          </ButtonPrimary>\n        </ModalActions>\n      </form>\n    );\n  }\n}\n\nexport default RobotModelOptions;\n","import React from 'react';\nimport {\n  ButtonPrimary,\n  FlexGrow,\n  Input,\n  InputLabel,\n  InputWrapper,\n} from '../../components/styled';\nimport { ModalActions } from '../../components/styled/modal';\n\nclass GenericOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.selectedViz.vizType,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.updateName = this.updateName.bind(this);\n  }\n\n  updateName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { addVisualization, selectedViz } = this.props;\n    const { name } = this.state;\n    addVisualization({\n      ...selectedViz,\n      name,\n      visible: true,\n    });\n  }\n\n  render() {\n    const { name } = this.state;\n    const { back } = this.props;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <InputWrapper>\n          <InputLabel>Visualization name</InputLabel>\n          <Input value={name} onChange={this.updateName} />\n        </InputWrapper>\n\n        <ModalActions>\n          <FlexGrow />\n          <ButtonPrimary type=\"submit\">Add visualization</ButtonPrimary>\n          <ButtonPrimary type=\"button\" onClick={back}>\n            Back\n          </ButtonPrimary>\n        </ModalActions>\n      </form>\n    );\n  }\n}\n\nexport default GenericOptions;\n","import React from 'react';\n\nimport { VIZ_TYPE_ROBOTMODEL } from 'amphion/src/utils/constants';\nimport RobotModelOptions from './optionsRobotModel';\nimport GenericOptions from './optionsGeneric';\n\nclass SelectedVizOptionsForm extends React.PureComponent {\n  render() {\n    const {\n      addVisualization,\n      back,\n      ros,\n      selectedViz: { vizType: type },\n      selectedViz,\n    } = this.props;\n    if (type === VIZ_TYPE_ROBOTMODEL) {\n      return (\n        <RobotModelOptions\n          addVisualization={addVisualization}\n          ros={ros}\n          selectedViz={selectedViz}\n          back={back}\n        />\n      );\n    }\n    return (\n      <GenericOptions\n        addVisualization={addVisualization}\n        selectedViz={selectedViz}\n        back={back}\n      />\n    );\n  }\n}\n\nexport default SelectedVizOptionsForm;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { TabsButton, TabsHeader } from '../../components/styled';\nimport {\n  ModalWrapper,\n  ModalContents,\n  ModalTitle,\n} from '../../components/styled/modal';\nimport TabVizType from './tabVizType';\nimport TabTopicName from './tabTopicName';\nimport SelectedVizOptionsForm from './options';\n\nconst stopPropagation = e => e.stopPropagation();\n\nconst tabs = {\n  vizType: 'Visualization type',\n  topicName: 'Topic name',\n};\n\nclass AddModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabType: tabs.vizType,\n      selectedViz: '',\n    };\n\n    this.updateTab = this.updateTab.bind(this);\n    this.selectViz = this.selectViz.bind(this);\n  }\n\n  updateTab(tabType) {\n    this.setState({\n      tabType,\n    });\n  }\n\n  selectViz(vizType, topicName, messageType) {\n    this.setState({\n      selectedViz: vizType\n        ? {\n            vizType,\n            topicName,\n            messageType,\n          }\n        : '',\n    });\n  }\n\n  render() {\n    const {\n      addVisualization,\n      closeModal,\n      ros,\n      rosParams,\n      rosTopics,\n    } = this.props;\n    const { selectedViz, tabType } = this.state;\n    return (\n      <ModalWrapper onClick={closeModal}>\n        <ModalContents onClick={stopPropagation}>\n          <ModalTitle>Add Visualization</ModalTitle>\n          {selectedViz ? (\n            <SelectedVizOptionsForm\n              addVisualization={addVisualization}\n              selectedViz={selectedViz}\n              ros={ros}\n              back={() => this.selectViz(null)}\n            />\n          ) : (\n            <React.Fragment>\n              <TabsHeader>\n                {_.map(tabs, tabText => (\n                  <TabsButton\n                    key={tabText}\n                    type=\"button\"\n                    selected={tabType === tabText}\n                    onClick={() => this.updateTab(tabText)}\n                  >\n                    {tabText}\n                  </TabsButton>\n                ))}\n              </TabsHeader>\n              {tabType === tabs.vizType ? (\n                <TabVizType\n                  selectViz={this.selectViz}\n                  rosTopics={rosTopics}\n                  rosParams={rosParams}\n                  closeModal={closeModal}\n                />\n              ) : (\n                <TabTopicName\n                  selectViz={this.selectViz}\n                  rosTopics={rosTopics}\n                  closeModal={closeModal}\n                />\n              )}\n            </React.Fragment>\n          )}\n        </ModalContents>\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default AddModal;\n","import React from 'react';\nimport { HalfWidth, StyledOptionRow } from './styled';\n\nconst OptionRow = ({ label, children }) => (\n  <StyledOptionRow>\n    <HalfWidth>{label}:</HalfWidth>\n    <HalfWidth>{children}</HalfWidth>\n  </StyledOptionRow>\n);\n\nexport default OptionRow;\n","import React from 'react';\nimport _ from 'lodash';\nimport OptionRow from '../../components/optionRow';\nimport { Container, Input, Select } from '../../components/styled';\n\nclass GlobalOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateOptions = this.updateOptions.bind(this);\n  }\n\n  updateOptions(e) {\n    const { updateGlobalOptions } = this.props;\n    const {\n      dataset: { id: optionId },\n      value,\n    } = e.target;\n    updateGlobalOptions(optionId, value);\n  }\n\n  render() {\n    const {\n      framesList,\n      globalOptions: {\n        backgroundColor: {\n          display: displayBackgroundColor,\n          value: valueBackgroundColor,\n        },\n        display: displayOptions,\n        fixedFrame: { display: displayFixedFrame, value: valueFixedFrame },\n        grid: { display: displayGrid, size: valueGrid },\n      },\n    } = this.props;\n    if (!displayOptions) {\n      return null;\n    }\n    return (\n      <Container>\n        {displayBackgroundColor && (\n          <OptionRow label=\"Background Color\">\n            <Input\n              type=\"color\"\n              data-id=\"backgroundColor.value\"\n              value={valueBackgroundColor}\n              onChange={this.updateOptions}\n            />\n          </OptionRow>\n        )}\n        {displayGrid && <OptionRow label=\"Grid size\">{valueGrid}</OptionRow>}\n        {displayFixedFrame && (\n          <OptionRow label=\"Fixed frame\">\n            <Select\n              value={valueFixedFrame}\n              data-id=\"fixedFrame.value\"\n              onChange={this.updateOptions}\n            >\n              {_.map(framesList, f => (\n                <option key={f} value={f}>\n                  {f}\n                </option>\n              ))}\n            </Select>\n          </OptionRow>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default GlobalOptions;\n","import React from 'react';\n\nimport { RosStatusIndicator } from './styled';\n\nclass ConnectionDot extends React.PureComponent {\n  render() {\n    const { status } = this.props;\n    return <RosStatusIndicator status={status} />;\n  }\n}\n\nexport default ConnectionDot;\n","import React from 'react';\n\nconst Logo = () => (\n  <svg viewBox=\"0 0 1870.38 418.16\" style={{ fill: '#000' }}>\n    <polygon points=\"159.8 241.17 231.44 365.27 303.09 241.17 159.8 241.17\" />\n    <polygon points=\"54.32 58.49 98.6 135.18 364.28 135.18 320 58.49 54.32 58.49\" />\n    <polygon points=\"480.2 182.67 408.56 58.58 336.91 182.67 480.2 182.67\" />\n    <polygon points=\"585.68 365.35 541.4 288.66 275.72 288.66 320 365.35 585.68 365.35\" />\n    <path d=\"M885.76,59.56c6,0,7.57,3.79,5.68,9.08L797.19,312.4h83.27c3.79,0,6.06,1.89,6.06,6.05v37.48c0,3.78-2.27,6.05-6.06,6.43H733.22c-6.05,0-7.94-3.78-5.67-9.08L821.79,109.9H743.44c-3.78,0-6.05-2.27-6.05-6.06V66c0-4.16,2.27-6,6.05-6.43Z\" />\n    <path d=\"M1065.92,103.46c0,3.79-1.51,6.44-6.05,6.44H965.24v75.7h72.29c3.79,0,6.06,2.27,6.06,6.43v37.48c0,4.16-2.27,6.43-6.06,6.43H965.24V312.4h94.63c4.54,0,6.05,1.89,6.05,6.05v37.86c0,3.78-1.51,6.05-6.05,6.05H920.58c-3.41,0-5.68-2.27-5.68-6.05V65.62c0-3.79,2.27-6.06,5.68-6.06h139.29c4.54,0,6.05,2.27,6.05,6.06Z\" />\n    <path d=\"M1241.54,59.56c4.17,0,6.06,2.27,6.06,6.06v37.84c0,3.79-1.89,6.06-6.06,6.06h-43.9V356.31c0,4.16-1.89,6.05-6.06,6.05h-39.36c-3.79,0-6.06-1.89-6.06-6.05V109.52h-43.91c-3.78,0-6.06-2.27-6.06-6.06V65.62c0-3.79,2.28-6.06,6.06-6.06Z\" />\n    <path d=\"M1377.8,65.62c0-3.79,2.27-6.06,6-6.06h39c4.54,0,6.43,2.27,6.43,6.06V356.31c0,3.78-1.89,6.05-6.43,6.05h-39c-3.78,0-6-2.27-6-6.05V235.94h-48.45V356.31c0,3.78-2.27,6.05-6.06,6.05h-39c-4.55,0-6.44-2.27-6.44-6.05V65.62c0-3.79,1.89-6.06,6.44-6.06h39c3.79,0,6.06,2.27,6.06,6.06V186h48.45Z\" />\n    <path d=\"M1611,59.56a7.59,7.59,0,0,1,7.57,7.57V307.86c0,35.57-18.92,54.5-54.5,54.5h-42.39c-35.58,0-54.51-18.93-54.51-54.5V67.13a7.6,7.6,0,0,1,7.57-7.57H1511a7.6,7.6,0,0,1,7.57,7.57V297.26c0,10.22,5.3,15.14,15.14,15.14h19.68c9.84,0,15.14-4.92,15.14-15.14V67.13a7.6,7.6,0,0,1,7.57-7.57Z\" />\n    <path d=\"M1753.27,59.56c35.58,0,54.5,18.92,54.5,54.5v40.12c0,3.79-1.89,6.06-6,6.06h-39.37c-3.78,0-6-2.27-6-6.06V124.66c0-9.84-4.92-15.14-15.15-15.14H1723c-9.46,0-15.14,5.3-15.14,15.14v52.23l90.08,29.53c6.44,2.65,9.84,6.81,9.84,14v87.44c0,35.57-18.92,54.5-54.5,54.5h-42.39c-35.2,0-54.51-18.93-54.51-54.5V268.11c0-4.16,2.27-6.05,6.06-6.05h39.36c4.17,0,6.06,1.89,6.06,6.05v29.15c0,10.22,5.68,15.14,15.14,15.14h18.16c9.85,0,15.15-4.92,15.15-15.14V246.92l-89.71-29.53c-6.81-2.27-10.22-6.81-10.22-14V114.06c0-35.58,19.31-54.5,54.51-54.5Z\" />\n  </svg>\n);\n\nexport default Logo;\n","import React from 'react';\nimport {\n  AXES,\n  COLOR_TRANSFORMERS,\n  INTENSITY_CHANNEL_OPTIONS,\n} from 'amphion/src/utils/constants';\nimport _ from 'lodash';\n\nimport OptionRow from '../../../components/optionRow';\nimport { Input, OptionContainer, Select } from '../../../components/styled';\n\nconst Intensity = props => {\n  const {\n    options: {\n      autocomputeIntensityBounds,\n      channelName,\n      maxColor,\n      maxIntensity,\n      minColor,\n      minIntensity,\n      useRainbow,\n    },\n    updateOptions,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <OptionRow label=\"Channel Name\">\n        <Select\n          name=\"channelName\"\n          data-id=\"channelName\"\n          onChange={updateOptions}\n          value={channelName}\n        >\n          {_.map(INTENSITY_CHANNEL_OPTIONS, channel => {\n            return (\n              <option key={channel} value={channel}>\n                {channel}\n              </option>\n            );\n          })}\n        </Select>\n      </OptionRow>\n      {!useRainbow && (\n        <React.Fragment>\n          <OptionRow label=\"Min Color\">\n            <Input\n              name=\"minColor\"\n              type=\"color\"\n              data-id=\"minColor\"\n              value={minColor}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n          <OptionRow label=\"Max Color\">\n            <Input\n              name=\"maxColor\"\n              type=\"color\"\n              data-id=\"maxColor\"\n              value={maxColor}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n        </React.Fragment>\n      )}\n      {!autocomputeIntensityBounds && (\n        <React.Fragment>\n          <OptionRow label=\"Min Intensity\">\n            <Input\n              type=\"number\"\n              name=\"minIntensity\"\n              data-id=\"minIntensity\"\n              value={minIntensity}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n          <OptionRow label=\"Max Intensity\">\n            <Input\n              type=\"number\"\n              name=\"maxIntensity\"\n              data-id=\"maxIntensity\"\n              value={maxIntensity}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst AxisColor = props => {\n  const {\n    options: { autocomputeValueBounds, axis, maxAxisValue, minAxisValue },\n    updateOptions,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <OptionRow label=\"Axis\">\n        <Select\n          name=\"axis\"\n          data-id=\"axis\"\n          onChange={updateOptions}\n          value={axis}\n        >\n          {_.map(AXES, a => {\n            return (\n              <option key={a} value={a}>\n                {a}\n              </option>\n            );\n          })}\n        </Select>\n      </OptionRow>\n      {!autocomputeValueBounds && (\n        <OptionContainer>\n          <OptionRow label=\"Min Value\">\n            <Input\n              type=\"number\"\n              name=\"minAxisValue\"\n              data-id=\"minAxisValue\"\n              value={minAxisValue}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n\n          <OptionRow label=\"Max Value\">\n            <Input\n              type=\"number\"\n              name=\"maxAxisValue\"\n              data-id=\"maxAxisValue\"\n              value={maxAxisValue}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n        </OptionContainer>\n      )}\n    </React.Fragment>\n  );\n};\n\nclass ColorTransformer extends React.PureComponent {\n  render() {\n    const {\n      options: { colorTransformer, flatColor },\n      options,\n      updateOptions,\n    } = this.props;\n\n    switch (colorTransformer) {\n      case COLOR_TRANSFORMERS.INTENSITY:\n        return <Intensity options={options} updateOptions={updateOptions} />;\n      case COLOR_TRANSFORMERS.AXIS_COLOR:\n        return <AxisColor options={options} updateOptions={updateOptions} />;\n      case COLOR_TRANSFORMERS.FLAT_COLOR:\n        return (\n          <OptionRow label=\"Flat Color\">\n            <Input\n              type=\"color\"\n              name=\"flatColor\"\n              data-id=\"flatColor\"\n              value={flatColor}\n              onChange={updateOptions}\n            />\n          </OptionRow>\n        );\n      default:\n        return null;\n    }\n  }\n}\n\nexport default ColorTransformer;\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  COLOR_TRANSFORMERS,\n  LASERSCAN_STYLES,\n  DEFAULT_OPTIONS_LASERSCAN,\n} from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport ColorTransformer from './colorTransformer';\nimport { updateOptionsUtil } from '../../../utils';\nimport { Input, Select } from '../../../components/styled';\n\nclass LaserScanOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateOptions = updateOptionsUtil.bind(this);\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n\n    const options = {\n      ...DEFAULT_OPTIONS_LASERSCAN,\n      ...propsOptions,\n    };\n    const { alpha, colorTransformer, size, style } = options;\n\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Style\">\n          <Select\n            name=\"style\"\n            data-id=\"style\"\n            onChange={this.updateOptions}\n            value={style}\n          >\n            {_.map(LASERSCAN_STYLES, lStyle => {\n              return (\n                <option key={lStyle} value={lStyle}>\n                  {lStyle}\n                </option>\n              );\n            })}\n          </Select>\n        </OptionRow>\n\n        <OptionRow label=\"Size\">\n          <Input\n            type=\"number\"\n            name=\"size\"\n            data-id=\"size\"\n            value={size}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Alpha\">\n          <Input\n            type=\"number\"\n            name=\"alpha\"\n            data-id=\"alpha\"\n            value={alpha}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Color Transformer\">\n          <Select\n            name=\"colorTransformer\"\n            data-id=\"colorTransformer\"\n            onChange={this.updateOptions}\n            value={colorTransformer}\n          >\n            {_.map(COLOR_TRANSFORMERS, color => {\n              return (\n                <option key={color} value={color}>\n                  {color}\n                </option>\n              );\n            })}\n          </Select>\n        </OptionRow>\n        {\n          <ColorTransformer\n            options={options}\n            updateOptions={this.updateOptions}\n          />\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LaserScanOptions;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {\n  DEFAULT_OPTIONS_MAP,\n  MAP_COLOR_SCHEMES,\n} from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport { updateOptionsUtil } from '../../../utils';\nimport { Input, Select } from '../../../components/styled';\n\nclass MapOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateOptions = updateOptionsUtil.bind(this);\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n    const options = {\n      ...DEFAULT_OPTIONS_MAP,\n      ...propsOptions,\n    };\n    const { alpha, colorScheme, drawBehind } = options;\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Alpha\">\n          <Input\n            type=\"number\"\n            name=\"alpha\"\n            data-id=\"alpha\"\n            value={alpha}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n        <OptionRow label=\"Color Scheme\">\n          <Select\n            name=\"colorScheme\"\n            data-id=\"colorScheme\"\n            onChange={this.updateOptions}\n            value={colorScheme}\n          >\n            {_.map(MAP_COLOR_SCHEMES, scheme => {\n              return (\n                <option key={scheme} value={scheme}>\n                  {scheme}\n                </option>\n              );\n            })}\n          </Select>\n        </OptionRow>\n        <OptionRow label=\"Draw Behind\">\n          <Input\n            type=\"checkbox\"\n            name=\"drawBehind\"\n            data-id=\"drawBehind\"\n            value={drawBehind}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MapOptions;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { DEFAULT_OPTIONS_MARKER } from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport { Input, OptionContainer } from '../../../components/styled';\n\nclass MarkerOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateNamespaceVisibility = this.updateNamespaceVisibility.bind(this);\n  }\n\n  updateNamespaceVisibility(e) {\n    const {\n      options: { key, namespaces },\n      updateVizOptions,\n    } = this.props;\n    const {\n      checked,\n      dataset: { id: optionId },\n    } = e.target;\n    updateVizOptions(key, {\n      namespaces: {\n        ...namespaces,\n        [optionId]: checked,\n      },\n    });\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n\n    const { namespaces } = {\n      ...DEFAULT_OPTIONS_MARKER,\n      ...propsOptions,\n    };\n\n    if (_.size(_.compact(_.keys(namespaces))) === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        Namespaces:\n        <OptionContainer>\n          {_.map(namespaces, (checked, key) =>\n            key ? (\n              <OptionRow label={key}>\n                <Input\n                  name={key}\n                  type=\"checkbox\"\n                  data-id=\"key\"\n                  checked={checked}\n                  onChange={this.updateNamespaceVisibility}\n                />\n              </OptionRow>\n            ) : null,\n          )}\n        </OptionContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MarkerOptions;\n","import React from 'react';\nimport { DEFAULT_OPTIONS_ARROW } from 'amphion/src/utils/constants';\n\nimport OptionRow from '../../../components/optionRow';\nimport { Input } from '../../../components/styled';\n\nclass ArrowOptions extends React.PureComponent {\n  render() {\n    const { options: propsOptions, updateOptions } = this.props;\n\n    const { alpha, color, headLength, headRadius, shaftLength, shaftRadius } = {\n      ...DEFAULT_OPTIONS_ARROW,\n      ...propsOptions,\n    };\n\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Color\">\n          <Input\n            name=\"color\"\n            type=\"color\"\n            value={color}\n            data-id=\"color\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Alpha\">\n          <Input\n            name=\"alpha\"\n            type=\"number\"\n            value={alpha}\n            data-id=\"alpha\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Shaft Length\">\n          <Input\n            name=\"shaftLength\"\n            type=\"number\"\n            value={shaftLength}\n            data-id=\"shaftLength\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Shaft Radius\">\n          <Input\n            name=\"shaftRadius\"\n            type=\"number\"\n            value={shaftRadius}\n            data-id=\"shaftRadius\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Head Length\">\n          <Input\n            name=\"headLength\"\n            type=\"number\"\n            value={headLength}\n            data-id=\"headLength\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Head Radius\">\n          <Input\n            name=\"headRadius\"\n            type=\"number\"\n            value={headRadius}\n            data-id=\"headRadius\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ArrowOptions;\n","import React from 'react';\nimport { DEFAULT_OPTIONS_FLATARROW } from 'amphion/src/utils/constants';\n\nimport OptionRow from '../../../components/optionRow';\nimport { Input } from '../../../components/styled';\n\nclass FlatArrowOptions extends React.PureComponent {\n  render() {\n    const { options: propsOptions, updateOptions } = this.props;\n    const { alpha, arrowLength, color } = {\n      ...DEFAULT_OPTIONS_FLATARROW,\n      ...propsOptions,\n    };\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Color\">\n          <Input\n            name=\"color\"\n            type=\"color\"\n            value={color}\n            data-id=\"color\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Alpha\">\n          <Input\n            name=\"alpha\"\n            type=\"number\"\n            value={alpha}\n            data-id=\"alpha\"\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Arrow length\">\n          <Input\n            name=\"arrowLength\"\n            type=\"number\"\n            data-id=\"arrowLength\"\n            value={arrowLength}\n            onChange={updateOptions}\n          />\n        </OptionRow>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FlatArrowOptions;\n","import React from 'react';\nimport { DEFAULT_OPTIONS_AXES } from 'amphion/src/utils/constants';\n\nimport OptionRow from '../../../components/optionRow';\nimport { Input } from '../../../components/styled';\n\nclass AxesOptions extends React.PureComponent {\n  render() {\n    const { options: propsOptions, updateOptions } = this.props;\n    const { axesLength, axesRadius } = {\n      ...DEFAULT_OPTIONS_AXES,\n      ...propsOptions,\n    };\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Axes Length\">\n          <Input\n            name=\"axesLength\"\n            type=\"number\"\n            data-id=\"axesLength\"\n            value={axesLength}\n            onChange={updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Axes Radius\">\n          <Input\n            name=\"axesRadius\"\n            type=\"number\"\n            data-id=\"axesRadius\"\n            value={axesRadius}\n            onChange={updateOptions}\n          />\n        </OptionRow>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AxesOptions;\n","import React from 'react';\nimport {\n  OBJECT_TYPE_ARROW,\n  OBJECT_TYPE_AXES,\n  OBJECT_TYPE_FLAT_ARROW,\n} from 'amphion/src/utils/constants';\n\nimport Arrow from './arrow';\nimport FlatArrow from './flatArrow';\nimport Axes from './axes';\n\nclass ShapeOptions extends React.PureComponent {\n  render() {\n    const {\n      options,\n      options: { type: shapeType },\n      updateOptions,\n    } = this.props;\n\n    switch (shapeType) {\n      case OBJECT_TYPE_ARROW:\n        return <Arrow updateOptions={updateOptions} options={options} />;\n      case OBJECT_TYPE_FLAT_ARROW:\n        return <FlatArrow updateOptions={updateOptions} options={options} />;\n      case OBJECT_TYPE_AXES:\n        return <Axes updateOptions={updateOptions} options={options} />;\n      default:\n        return null;\n    }\n  }\n}\n\nexport default ShapeOptions;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {\n  DEFAULT_OPTIONS_ODOMETRY,\n  OBJECT_TYPE_ARROW,\n  OBJECT_TYPE_AXES,\n} from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport ShapeOptions from './shape';\nimport { updateOptionsUtil } from '../../../utils';\nimport { Input, OptionContainer, Select } from '../../../components/styled';\n\nclass OdometryOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateOptions = updateOptionsUtil.bind(this);\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n    const options = {\n      ...DEFAULT_OPTIONS_ODOMETRY,\n      ...propsOptions,\n    };\n    const {\n      angleTolerance,\n      keep,\n      positionTolerance,\n      type: shapeType,\n    } = options;\n\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Position Tolerance\">\n          <Input\n            name=\"positionTolerance\"\n            type=\"number\"\n            value={positionTolerance}\n            data-id=\"positionTolerance\"\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n        <OptionRow label=\"Angle Tolerance\">\n          <Input\n            name=\"angleTolerance\"\n            type=\"number\"\n            data-id=\"angleTolerance\"\n            value={angleTolerance}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n        <OptionRow label=\"Keep\">\n          <Input\n            name=\"keep\"\n            type=\"number\"\n            data-id=\"keep\"\n            value={keep}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n\n        <OptionRow label=\"Shape\">\n          <Select\n            name=\"type\"\n            data-id=\"type\"\n            onChange={this.updateOptions}\n            value={shapeType}\n          >\n            {_.map([OBJECT_TYPE_ARROW, OBJECT_TYPE_AXES], type => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </Select>\n        </OptionRow>\n\n        <OptionContainer>\n          <ShapeOptions options={options} updateOptions={this.updateOptions} />\n        </OptionContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OdometryOptions;\n","import React from 'react';\nimport { DEFAULT_OPTIONS_PATH } from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport { updateOptionsUtil } from '../../../utils';\nimport { Input } from '../../../components/styled';\n\nclass PathOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateOptions = updateOptionsUtil.bind(this);\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n    const { alpha, color } = {\n      ...DEFAULT_OPTIONS_PATH,\n      ...propsOptions,\n    };\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Color\">\n          <Input\n            type=\"color\"\n            name=\"color\"\n            data-id=\"color\"\n            value={color}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n        <OptionRow label=\"Alpha\">\n          <Input\n            type=\"number\"\n            name=\"alpha\"\n            data-id=\"alpha\"\n            value={alpha}\n            onChange={this.updateOptions}\n          />\n        </OptionRow>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PathOptions;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {\n  DEFAULT_OPTIONS_POSE,\n  OBJECT_TYPE_ARROW,\n  OBJECT_TYPE_AXES,\n  OBJECT_TYPE_FLAT_ARROW,\n  VIZ_TYPE_POSE,\n  VIZ_TYPE_POSEARRAY,\n} from 'amphion/src/utils/constants';\nimport OptionRow from '../../../components/optionRow';\nimport ShapeOptions from './shape';\nimport { updateOptionsUtil } from '../../../utils';\nimport { OptionContainer, Select } from '../../../components/styled';\n\nconst dropdownOptions = {\n  [VIZ_TYPE_POSE]: [OBJECT_TYPE_ARROW, OBJECT_TYPE_AXES],\n  [VIZ_TYPE_POSEARRAY]: [\n    OBJECT_TYPE_ARROW,\n    OBJECT_TYPE_AXES,\n    OBJECT_TYPE_FLAT_ARROW,\n  ],\n};\n\nclass PoseOptions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateOptions = updateOptionsUtil.bind(this);\n  }\n\n  render() {\n    const { options: propsOptions } = this.props;\n    const options = {\n      ...DEFAULT_OPTIONS_POSE,\n      ...propsOptions,\n    };\n    const { type: shapeType, vizType } = options;\n\n    return (\n      <React.Fragment>\n        <OptionRow label=\"Shape\">\n          <Select\n            name=\"type\"\n            data-id=\"type\"\n            onChange={this.updateOptions}\n            value={shapeType}\n          >\n            {_.map(dropdownOptions[vizType], o => (\n              <option key={o} value={o}>\n                {o}\n              </option>\n            ))}\n          </Select>\n        </OptionRow>\n        <OptionContainer>\n          {\n            <ShapeOptions\n              options={options}\n              updateOptions={this.updateOptions}\n            />\n          }\n        </OptionContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PoseOptions;\n","import React from 'react';\nimport {\n  VIZ_TYPE_IMAGE,\n  VIZ_TYPE_LASERSCAN,\n  VIZ_TYPE_MAP,\n  VIZ_TYPE_MARKER,\n  VIZ_TYPE_MARKERARRAY,\n  VIZ_TYPE_ODOMETRY,\n  VIZ_TYPE_PATH,\n  VIZ_TYPE_POINTCLOUD,\n  VIZ_TYPE_POLYGON,\n  VIZ_TYPE_POSE,\n  VIZ_TYPE_POSEARRAY,\n  VIZ_TYPE_ROBOTMODEL,\n  VIZ_TYPE_TF,\n} from 'amphion/src/utils/constants';\nimport LaserScanOptions from './laserScan';\nimport MapOptions from './map';\nimport MarkerOptions from './marker';\nimport OdometryOptions from './odometry';\nimport PathOptions from './path';\nimport PoseOptions from './pose';\n\nconst VizSpecificOptions = ({\n  options: { vizType },\n  options,\n  updateVizOptions,\n}) => {\n  switch (vizType) {\n    case VIZ_TYPE_IMAGE:\n      return null;\n    case VIZ_TYPE_LASERSCAN:\n      return (\n        <LaserScanOptions\n          options={options}\n          updateVizOptions={updateVizOptions}\n        />\n      );\n    case VIZ_TYPE_MAP:\n      return (\n        <MapOptions options={options} updateVizOptions={updateVizOptions} />\n      );\n    case VIZ_TYPE_MARKER:\n      return (\n        <MarkerOptions options={options} updateVizOptions={updateVizOptions} />\n      );\n    case VIZ_TYPE_MARKERARRAY:\n      return null;\n    case VIZ_TYPE_ODOMETRY:\n      return (\n        <OdometryOptions\n          options={options}\n          updateVizOptions={updateVizOptions}\n        />\n      );\n    case VIZ_TYPE_PATH:\n      return (\n        <PathOptions options={options} updateVizOptions={updateVizOptions} />\n      );\n    case VIZ_TYPE_POINTCLOUD:\n      return null;\n    case VIZ_TYPE_POLYGON:\n      return null;\n    case VIZ_TYPE_POSE:\n      return (\n        <PoseOptions options={options} updateVizOptions={updateVizOptions} />\n      );\n    case VIZ_TYPE_POSEARRAY:\n      return null;\n    case VIZ_TYPE_ROBOTMODEL:\n      return null;\n    case VIZ_TYPE_TF:\n      return null;\n    default:\n      return null;\n  }\n};\n\nexport default VizSpecificOptions;\n","import React, { useState } from 'react';\nimport _ from 'lodash';\n\nimport { VIZ_TYPE_ROBOTMODEL, VIZ_TYPE_TF } from 'amphion/src/utils/constants';\nimport VizSpecificOptions from './vizSpecificOption';\nimport { Button, Select, StyledOptionRow } from '../../../components/styled';\nimport OptionRow from '../../../components/optionRow';\nimport {\n  VizItem,\n  VizItemActions,\n  VizItemCollapse,\n  VizItemContent,\n  VizItemIcon,\n} from '../../../components/styled/viz';\n\nconst VizOptions = ({\n  options: { display, key, name, topicName, visible, vizType },\n  options,\n  topics,\n  vizObject: { icon },\n  updateVizOptions,\n  removeVisualization,\n  toggleVisibility,\n}) => {\n  const [collapsed, toggleCollapsed] = useState(false);\n\n  if (_.isBoolean(display) && !display) {\n    return null;\n  }\n  return (\n    <VizItem>\n      <StyledOptionRow>\n        <VizItemCollapse\n          collapsed={collapsed}\n          onClick={() => toggleCollapsed(!collapsed)}\n        >\n          <img src=\"./image/chevron.svg\" alt=\"\" />\n        </VizItemCollapse>\n        <VizItemIcon src={icon} alt=\"\" />\n        {name}\n      </StyledOptionRow>\n      {!collapsed && (\n        <VizItemContent>\n          {!_.includes([VIZ_TYPE_ROBOTMODEL, VIZ_TYPE_TF], vizType) && (\n            <OptionRow label=\"Topic\">\n              <Select\n                value={topicName}\n                onChange={e =>\n                  updateVizOptions(key, { topicName: e.target.value })\n                }\n              >\n                {_.map(topics, topic => (\n                  <option key={topic.name}>{topic.name}</option>\n                ))}\n              </Select>\n            </OptionRow>\n          )}\n          <VizSpecificOptions\n            options={options}\n            updateVizOptions={updateVizOptions}\n          />\n          <VizItemActions>\n            <Button data-id={key} onClick={removeVisualization}>\n              Delete\n            </Button>\n            <Button data-id={key} onClick={toggleVisibility}>\n              {_.isBoolean(visible) && !visible ? 'Show' : 'Hide'}\n            </Button>\n          </VizItemActions>\n        </VizItemContent>\n      )}\n    </VizItem>\n  );\n};\n\nexport default VizOptions;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { ROS_SOCKET_STATUSES, vizOptions } from '../../utils';\nimport GlobalOptions from './globalOptions';\nimport {\n  ButtonPrimary,\n  Container,\n  Input,\n  InputLabel,\n  Separator,\n  FlexSpace,\n  Flex,\n  StyledSidebar,\n  StyledLogo,\n} from '../../components/styled';\nimport ConnectionDot from '../../components/connectionDot';\n\nimport Logo from '../../components/logo';\nimport VizOptions from './vizOptions';\nimport { RosStatus, SidebarVizContainer } from '../../components/styled/viz';\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rosInput: props.rosEndpoint,\n    };\n    this.updateRosInput = this.updateRosInput.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateRosInput(e) {\n    this.setState({\n      rosInput: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    const { updateRosEndpoint } = this.props;\n    const { rosInput } = this.state;\n    e.preventDefault();\n    updateRosEndpoint(rosInput);\n  }\n\n  render() {\n    const {\n      framesList,\n      visualizations,\n      removeVisualization,\n      rosInstance,\n      rosStatus,\n      rosTopics,\n      globalOptions,\n      toggleVisibility,\n      updateGlobalOptions,\n      updateVizOptions,\n      viewer,\n      toggleAddModal,\n    } = this.props;\n\n    const { rosInput } = this.state;\n    return (\n      <StyledSidebar>\n        <StyledLogo>\n          <Logo />\n        </StyledLogo>\n        <Separator />\n        <Container>\n          <RosStatus>\n            <ConnectionDot status={rosStatus} />\n            <span>{rosStatus}</span>\n          </RosStatus>\n          <form onSubmit={this.onSubmit}>\n            <InputLabel>ROS Endpoint</InputLabel>\n            <Flex>\n              <Input\n                type=\"text\"\n                value={rosInput}\n                onChange={this.updateRosInput}\n              />\n              <FlexSpace />\n              <ButtonPrimary type=\"submit\">\n                {rosStatus === ROS_SOCKET_STATUSES.CONNECTED\n                  ? 'Disconnect'\n                  : 'Connect'}\n              </ButtonPrimary>\n            </Flex>\n          </form>\n        </Container>\n        <Separator />\n        {rosStatus === ROS_SOCKET_STATUSES.CONNECTED && (\n          <React.Fragment>\n            <GlobalOptions\n              framesList={framesList}\n              globalOptions={globalOptions}\n              updateGlobalOptions={updateGlobalOptions}\n            />\n            <Separator />\n            <SidebarVizContainer>\n              <ButtonPrimary type=\"button\" onClick={toggleAddModal}>\n                Add Visualization\n              </ButtonPrimary>\n              {_.size(visualizations) === 0 && (\n                <p>No visualizations added to the scene</p>\n              )}\n              {_.map(visualizations, vizItem => {\n                const vizObject = _.find(\n                  vizOptions,\n                  v => v.type === vizItem.vizType,\n                );\n                if (!vizObject) {\n                  return null;\n                }\n                const topics = _.filter(rosTopics, t =>\n                  _.includes(vizObject.messageTypes, t.messageType),\n                );\n                return (\n                  <VizOptions\n                    options={vizItem}\n                    key={vizItem.key}\n                    viewer={viewer}\n                    topics={topics}\n                    vizObject={vizObject}\n                    rosInstance={rosInstance}\n                    updateVizOptions={updateVizOptions}\n                    removeVisualization={removeVisualization}\n                    toggleVisibility={toggleVisibility}\n                  />\n                );\n              })}\n            </SidebarVizContainer>\n          </React.Fragment>\n        )}\n      </StyledSidebar>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledViewport = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  height: 100%;\n  position: relative;\n\n  #viewportStats {\n    position: absolute !important;\n    top: auto !important;\n    left: auto !important;\n    right: 0 !important;\n    bottom: 0 !important;\n  }\n`;\n\nclass Viewport extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.container = React.createRef();\n\n    this.updateViewerOptions = this.updateViewerOptions.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateViewerOptions();\n  }\n\n  updateViewerOptions() {\n    const {\n      globalOptions: {\n        backgroundColor: { value: backgroundColor },\n        fixedFrame: { value: selectedFrame },\n        grid: {\n          centerlineColor: gridCenterlineColor,\n          color: gridColor,\n          divisions: gridDivisions,\n          size: gridSize,\n        },\n      },\n      viewer,\n    } = this.props;\n    viewer.updateOptions({\n      backgroundColor,\n      gridSize,\n      gridDivisions,\n      gridColor,\n      gridCenterlineColor,\n      selectedFrame,\n    });\n  }\n\n  componentDidMount() {\n    const { viewer } = this.props;\n    const container = this.container.current;\n    viewer.setContainer(container);\n    this.updateViewerOptions();\n    viewer.scene.stats.dom.id = 'viewportStats';\n    container.appendChild(viewer.scene.stats.dom);\n  }\n\n  componentWillUnmount() {\n    const { viewer } = this.props;\n    viewer.destroy();\n  }\n\n  render() {\n    return <StyledViewport ref={this.container} />;\n  }\n}\n\nexport default Viewport;\n","const Info = () => null;\n\nexport default Info;\n","const Tools = () => {};\n\nexport default Tools;\n","import React from 'react';\nimport { Rnd } from 'react-rnd';\nimport Amphion from 'amphion';\nimport {\n  VIZ_TYPE_IMAGE,\n  VIZ_TYPE_LASERSCAN,\n  VIZ_TYPE_MAP,\n  VIZ_TYPE_MARKER,\n  VIZ_TYPE_MARKERARRAY,\n  VIZ_TYPE_ODOMETRY,\n  VIZ_TYPE_PATH,\n  VIZ_TYPE_POINTCLOUD,\n  VIZ_TYPE_POSE,\n  VIZ_TYPE_POSEARRAY,\n  VIZ_TYPE_ROBOTMODEL,\n  VIZ_TYPE_TF,\n} from 'amphion/src/utils/constants';\nimport _ from 'lodash';\nimport { getTfTopics } from '../../utils';\nimport { VizImageContainer, VizImageHeader } from '../../components/styled/viz';\n\nclass Visualization extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.vizInstance = null;\n    this.imageDomRef = React.createRef();\n    this.resetVisualization = this.resetVisualization.bind(this);\n  }\n\n  static getNewViz(vizType, ros, topicName, options) {\n    switch (vizType) {\n      case VIZ_TYPE_IMAGE:\n        return new Amphion.Image(ros, topicName, options);\n      case VIZ_TYPE_LASERSCAN:\n        return new Amphion.LaserScan(ros, topicName, options);\n      case VIZ_TYPE_MAP:\n        return new Amphion.Map(ros, topicName, options);\n      case VIZ_TYPE_MARKER:\n        return new Amphion.Marker(ros, topicName, options);\n      case VIZ_TYPE_MARKERARRAY:\n        return new Amphion.MarkerArray(ros, topicName, options);\n      case VIZ_TYPE_ODOMETRY:\n        return new Amphion.Odometry(ros, topicName, options);\n      case VIZ_TYPE_PATH:\n        return new Amphion.Path(ros, topicName, options);\n      case VIZ_TYPE_POINTCLOUD:\n        return new Amphion.PointCloud(ros, topicName, options);\n      case VIZ_TYPE_POSE:\n        return new Amphion.Pose(ros, topicName, options);\n      case VIZ_TYPE_POSEARRAY:\n        return new Amphion.PoseArray(ros, topicName, options);\n      case VIZ_TYPE_ROBOTMODEL:\n        return new Amphion.RobotModel(ros, topicName, options);\n      case VIZ_TYPE_TF:\n        return new Amphion.Tf(ros, topicName, options);\n      default:\n        return null;\n    }\n  }\n\n  componentDidMount() {\n    this.resetVisualization();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      options: { topicName, visible, vizType },\n      options,\n      rosTopics,\n    } = this.props;\n    if (vizType !== prevProps.options.vizType) {\n      this.resetVisualization();\n    }\n    if (vizType === VIZ_TYPE_TF) {\n      const currentTfTopics = getTfTopics(rosTopics);\n      const prevTfTopics = getTfTopics(prevProps.rosTopics);\n      if (\n        _.join(_.sortBy(_.map(currentTfTopics, 'name'))) !==\n        _.join(_.sortBy(_.map(prevTfTopics, 'name')))\n      ) {\n        this.vizInstance.changeTopic(currentTfTopics);\n      }\n    } else if (\n      topicName !== prevProps.options.topicName &&\n      this.vizInstance.changeTopic\n    ) {\n      this.vizInstance.changeTopic(topicName);\n    }\n    if (this.vizInstance) {\n      this.vizInstance.updateOptions(options);\n    }\n    if (visible !== prevProps.options.visible) {\n      this.updateVisibility(visible);\n    }\n  }\n\n  resetVisualization() {\n    const {\n      options,\n      options: { topicName, visible, vizType },\n      rosInstance,\n      rosTopics,\n      viewer,\n    } = this.props;\n    if (this.vizInstance) {\n      this.vizInstance.destroy();\n    }\n\n    this.vizInstance = Visualization.getNewViz(\n      vizType,\n      rosInstance,\n      vizType === VIZ_TYPE_TF ? getTfTopics(rosTopics) : topicName,\n      options,\n    );\n    if (!this.vizInstance) {\n      return;\n    }\n    if (vizType === VIZ_TYPE_ROBOTMODEL) {\n      viewer.addRobot(this.vizInstance);\n    } else if (vizType === VIZ_TYPE_IMAGE) {\n      this.imageDomRef.current.appendChild(this.vizInstance.object);\n      this.vizInstance.subscribe();\n    } else {\n      viewer.addVisualization(this.vizInstance);\n      this.vizInstance.subscribe();\n    }\n    this.updateVisibility(!_.isBoolean(visible) || visible);\n  }\n\n  updateVisibility(visible) {\n    if (visible) {\n      this.vizInstance.show();\n    } else {\n      this.vizInstance.hide();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.vizInstance) {\n      this.vizInstance.destroy();\n    }\n  }\n\n  render() {\n    const {\n      options: { topicName, visible, vizType },\n    } = this.props;\n\n    if (vizType === VIZ_TYPE_IMAGE) {\n      return (\n        <Rnd\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n          }}\n          default={{\n            x: window.innerWidth - 320 - 30, // imageDefaultWidth: 320, imageRight: 30\n            y: 30, // imageTop: 30\n            width: 320,\n            height: 265, // imageDefaultHeight: 240 + 25px header padding,\n          }}\n          bounds=\"window\"\n          onResizeStop={(e, direction, ref) => {\n            this.vizInstance.updateDimensions(\n              Number.parseInt(ref.style.width, 10),\n              Number.parseInt(ref.style.height, 10) - 25, // -25px for header padding\n            );\n          }}\n        >\n          <VizImageContainer ref={this.imageDomRef}>\n            <VizImageHeader>Image - {topicName}</VizImageHeader>\n          </VizImageContainer>\n        </Rnd>\n      );\n    }\n    return null;\n  }\n}\n\nexport default Visualization;\n","import React from 'react';\nimport withGracefulUnmount from 'react-graceful-unmount';\nimport _ from 'lodash';\nimport ROSLIB from 'roslib';\nimport Amphion from 'amphion';\n\nimport { DEFAULT_CONFIG, ROS_SOCKET_STATUSES } from '../utils';\n\nimport { PanelWrapper, PanelContent } from '../components/styled';\nimport AddModal from './addModal';\nimport Sidebar from './sidebar';\nimport Viewport from './viewer';\nimport Info from './info';\nimport Tools from './tools';\nimport Visualization from './visualizations';\n\nclass Wrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rosEndpoint: '',\n      rosStatus: ROS_SOCKET_STATUSES.INITIAL,\n      addModalOpen: false,\n      rosTopics: [],\n      rosParams: [],\n      framesList: [],\n    };\n\n    this.connectRos = this.connectRos.bind(this);\n    this.disconnectRos = this.disconnectRos.bind(this);\n    this.toggleAddModal = this.toggleAddModal.bind(this);\n    this.refreshRosData = this.refreshRosData.bind(this);\n    this.addVisualization = this.addVisualization.bind(this);\n    this.updateFramesList = this.updateFramesList.bind(this);\n\n    this.ros = new ROSLIB.Ros();\n    this.viewer = new Amphion.TfViewer(this.ros, {\n      onFramesListUpdate: this.updateFramesList,\n    });\n  }\n\n  static getDerivedStateFromProps({ configuration }) {\n    return {\n      rosEndpoint: configuration.ros.endpoint,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { rosEndpoint } = this.state;\n    if (prevState.rosEndpoint !== rosEndpoint) {\n      this.disconnectRos();\n      this.connectRos();\n    }\n  }\n\n  componentDidMount() {\n    const { rosEndpoint } = this.state;\n    this.ros.on('error', () => {\n      this.setState({\n        rosStatus: ROS_SOCKET_STATUSES.CONNECTION_ERROR,\n      });\n    });\n\n    this.ros.on('connection', this.refreshRosData);\n\n    this.ros.on('close', () => {\n      this.setState({\n        rosStatus: ROS_SOCKET_STATUSES.INITIAL,\n      });\n    });\n\n    if (rosEndpoint) {\n      this.connectRos();\n    }\n  }\n\n  updateFramesList(framesList) {\n    this.setState({\n      framesList: [...framesList],\n    });\n  }\n\n  refreshRosData() {\n    this.ros.getTopics(rosTopics => {\n      this.setState({\n        rosStatus: ROS_SOCKET_STATUSES.CONNECTED,\n        rosTopics: _.map(rosTopics.topics, (name, index) => ({\n          name,\n          messageType: rosTopics.types[index],\n        })),\n      });\n    });\n    this.ros.getParams(rosParams => {\n      this.setState({ rosParams: _.map(rosParams, p => _.trimStart(p, '/')) });\n    });\n  }\n\n  componentWillUnmount() {\n    this.viewer.destroy();\n  }\n\n  connectRos() {\n    const { rosEndpoint } = this.state;\n    this.setState({\n      rosStatus: ROS_SOCKET_STATUSES.CONNECTING,\n    });\n    this.ros.connect(rosEndpoint);\n  }\n\n  disconnectRos() {\n    if (this.ros && this.ros.isConnected) {\n      this.ros.close();\n    }\n  }\n\n  toggleAddModal() {\n    const { addModalOpen } = this.state;\n    this.setState({\n      addModalOpen: !addModalOpen,\n    });\n  }\n\n  addVisualization(options) {\n    const { addVisualization } = this.props;\n    addVisualization(options);\n    this.setState({\n      addModalOpen: false,\n    });\n  }\n\n  render() {\n    const {\n      addModalOpen,\n      framesList,\n      rosEndpoint,\n      rosParams,\n      rosStatus,\n      rosTopics,\n    } = this.state;\n    const {\n      configuration: {\n        globalOptions,\n        panels: {\n          info: { display: displayInfo },\n          sidebar: { display: displaySidebar },\n          tools: { display: displayTools },\n        },\n        visualizations,\n      },\n      removeVisualization,\n      toggleVisibility,\n      updateGlobalOptions,\n      updateRosEndpoint,\n      updateVizOptions,\n    } = this.props;\n    return (\n      <PanelWrapper>\n        {addModalOpen && (\n          <AddModal\n            ros={this.ros}\n            rosTopics={rosTopics}\n            rosParams={rosParams}\n            closeModal={this.toggleAddModal}\n            addVisualization={this.addVisualization}\n          />\n        )}\n        {displaySidebar && (\n          <Sidebar\n            framesList={framesList}\n            globalOptions={globalOptions}\n            updateGlobalOptions={updateGlobalOptions}\n            rosEndpoint={rosEndpoint}\n            rosStatus={rosStatus}\n            visualizations={visualizations}\n            viewer={this.viewer}\n            rosTopics={rosTopics}\n            rosInstance={this.ros}\n            updateVizOptions={updateVizOptions}\n            updateRosEndpoint={updateRosEndpoint}\n            toggleAddModal={this.toggleAddModal}\n            removeVisualization={removeVisualization}\n            update\n            toggleVisibility={toggleVisibility}\n          />\n        )}\n        <PanelContent>\n          {displayTools && <Tools />}\n          <Viewport viewer={this.viewer} globalOptions={globalOptions} />\n          {displayInfo && <Info />}\n        </PanelContent>\n        {_.map(visualizations, vizItem => (\n          <Visualization\n            options={vizItem}\n            key={vizItem.key}\n            viewer={this.viewer}\n            rosTopics={rosTopics}\n            rosInstance={this.ros}\n          />\n        ))}\n      </PanelWrapper>\n    );\n  }\n}\n\nWrapper.defaultProps = {\n  configuration: DEFAULT_CONFIG,\n};\n\nexport default withGracefulUnmount(Wrapper);\n","import React from 'react';\nimport _ from 'lodash';\nimport shortid from 'shortid';\nimport withGracefulUnmount from 'react-graceful-unmount';\nimport store from 'store';\n\nimport Panels from './panels';\n\nimport { DEFAULT_CONFIG } from './utils';\n\nclass Zethus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...(props.configuration || store.get('zethus_config') || DEFAULT_CONFIG),\n    };\n    this.updateVizOptions = this.updateVizOptions.bind(this);\n    this.updateRosEndpoint = this.updateRosEndpoint.bind(this);\n    this.updateGlobalOptions = this.updateGlobalOptions.bind(this);\n    this.addVisualization = this.addVisualization.bind(this);\n    this.removeVisualization = this.removeVisualization.bind(this);\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n  }\n\n  updateVizOptions(key, options) {\n    const { visualizations } = this.state;\n    this.setState({\n      visualizations: _.map(visualizations, v =>\n        v.key === key ? { ...v, ...options } : v,\n      ),\n    });\n  }\n\n  updateRosEndpoint(endpoint) {\n    const { ros } = this.state;\n    this.setState({\n      ros: {\n        ...ros,\n        endpoint,\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    store.set('zethus_config', this.state);\n  }\n\n  updateGlobalOptions(path, option) {\n    const { globalOptions } = this.state;\n    const clonedGlobalOptions = _.cloneDeep(globalOptions);\n    _.set(clonedGlobalOptions, path, option);\n    this.setState({\n      globalOptions: clonedGlobalOptions,\n    });\n  }\n\n  removeVisualization(e) {\n    const {\n      dataset: { id: vizId },\n    } = e.target;\n    const { visualizations } = this.state;\n    this.setState({\n      visualizations: _.filter(visualizations, v => v.key !== vizId),\n    });\n  }\n\n  toggleVisibility(e) {\n    const {\n      dataset: { id: vizId },\n    } = e.target;\n    const { visualizations } = this.state;\n    this.setState({\n      visualizations: _.map(visualizations, v =>\n        v.key === vizId\n          ? {\n              ...v,\n              visible: !!(_.isBoolean(v.visible) && !v.visible),\n            }\n          : v,\n      ),\n    });\n  }\n\n  addVisualization(vizOptions) {\n    const { visualizations } = this.state;\n    this.setState({\n      visualizations: [\n        ...visualizations,\n        {\n          ...vizOptions,\n          key: shortid.generate(),\n        },\n      ],\n    });\n  }\n\n  render() {\n    return (\n      <Panels\n        configuration={this.state}\n        addVisualization={this.addVisualization}\n        removeVisualization={this.removeVisualization}\n        toggleVisibility={this.toggleVisibility}\n        updateVizOptions={this.updateVizOptions}\n        updateRosEndpoint={this.updateRosEndpoint}\n        updateGlobalOptions={this.updateGlobalOptions}\n      />\n    );\n  }\n}\n\nexport default withGracefulUnmount(Zethus);\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport Zethus from './zethus';\n\nimport './styles/common.scss';\n\nReactDOM.render(<Zethus />, document.getElementById('root'));\n"],"sourceRoot":""}